--- 
title:      'Webby, Meet GitHub Pages'
author: Les Hill
created_at: 2009-01-24 12:54:15.165056 -05:00
layout: blog_post
blog_post:  true
filter:
  - textile
  - coderay
--- 

As of this post, this blog is now hosted by GitHub's recently announced "GitHub Pages":http://github.com/blog/272-github-pagesi, still "Webby":http://webby.rubyforge.org powered, now with extra _git_ goodness.

*GitHub Pages* generates a static site from a GitHub hosted repo, using "Jekyll":http://github.com/mojombo/jekyll to generate the files.  *Jekyll* understands two special directories @_posts@ and @_layouts@, copying any other files and directories in the root of the repo that do not begin with an @_@ directly to the static site.

*Webby* generates a static site from set of source files (@content@, @layouts@, etc), placing the results in the @output_dir@ (defaults to @output@ but can be changed.)

To make *Webby* and *GitHub Pages* co-exist, I restructured my repo and made the following changes to my existing *Webby* site:

* The root of the repo is the @output_dir@ for *Webby*
* The *Webby* site (source files) are in a subdirectory name @_webby@
* The @webby@ command line tool should be run from within the @_webby@ directory, not the root of the repo
* The *Webby* @clobber@ target is overridden to ignore the @_webby@ directory
* @Sitefile@

<notextile>
<coderay:ruby>
SITE.output_dir = '..'

task :default => :clean_build
</coderay>
</notextile>

* @lib/override.rb@ Rake monkey patch to allow overriding tasks found "here":http://www.taknado.com/2007/7/30/overriding-rake-tasks

<notextile>
<coderay:ruby>
# From http://www.taknado.com/2007/7/30/overriding-rake-tasks
Rake::TaskManager.class_eval do
  def remove_task(task_name)
    @tasks.delete(task_name.to_s)
  end
end

def remove_task(task_name)
  Rake.application.remove_task(task_name)
end

def override_task(args, &block)
  name, deps = Rake.application.resolve_args([args])  
  remove_task Rake.application[name].name
  task(args, &block)
end
</coderay>
</notextile>

* @tasks/github_pages.rake@ redefines @clobber@  to ignore the @_webby@ directory and the new (default) @clean_build@ task allows for file deletions[1]

<notextile>
<coderay:ruby>
# We only want to remove the generated files
desc "Delete the website"
override_task :clobber do |t|
  Dir.chdir(Webby.site.output_dir) do
    Dir['*'].entries.reject {|entry| entry == '_webby'}.each {|entry| rm_rf entry}
  end
end

desc "Clobber, then build the website"
task :clean_build => [:clobber, :build]
</coderay>
</notextile>

The new workflow for adding a post to the new site is:

# Change directory to @_webby@
# Generate a new blog post
# Run @webby autobuild@
# Edit until completed
# Commit all changes locally (@git add .@ from the root)
# Push the changes

fn1. Webby does not know if you have deleted a source file, by forcing the entire site to be rebuilt, the deletion is reflected in the generated static files.
