<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
  <title>Wonderland</title>
  <subtitle>A Blog</subtitle>
  <link href="http://blog.leshill.org//" rel="self" />
  <link href="http://blog.leshill.org/" />
  <updated>2009-01-25T20:32:34-05:00</updated>
  <author>
    <name>Les Hill</name>
    <email>blog@leshill.org</email>
  </author>
  <id>http://blog.leshill.org/</id>
  
  <entry>
    <title>Nothing Special</title>
    <link href="http://blog.leshill.org/blog/2009/01/25/nothing-special.html" />
    
    <id>tag:blog.leshill.org,2009-01-25:1232933310</id>
    
    <published>2009-01-25T20:28:30-05:00</published>
    <updated>2009-01-25T20:28:30-05:00</updated>
    <content type="html">&lt;p&gt;For those of us in a certain part of tech community, this quote from &lt;a href=&quot;http://www.ritholtz.com/blog/2009/01/microsoft-zune-down-54/&quot;&gt;Barry Ritholtz&lt;/a&gt; is old news:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It just goes to show you that Microsoft, without the advantages of the Windows/Office monopoly, is simply just another ordinary company â€” nothing special, nothing innovative.&lt;/p&gt;
&lt;/blockquote&gt;</content>
  </entry>
  
  <entry>
    <title>Webby, Meet GitHub Pages</title>
    <link href="http://blog.leshill.org/blog/2009/01/24/webby-meet-github-pages.html" />
    
    <id>tag:blog.leshill.org,2009-01-24:1232819655</id>
    
    <published>2009-01-24T12:54:15-05:00</published>
    <updated>2009-01-24T12:54:15-05:00</updated>
    <content type="html">&lt;p&gt;As of this post, this blog is now hosted by GitHub&amp;#8217;s recently announced &lt;a href=&quot;http://github.com/blog/272-github-pagesi&quot;&gt;GitHub Pages&lt;/a&gt;, still &lt;a href=&quot;http://webby.rubyforge.org&quot;&gt;Webby&lt;/a&gt; powered, now with extra &lt;em&gt;git&lt;/em&gt; goodness.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GitHub Pages&lt;/strong&gt; generates a static site from a GitHub hosted repo, using &lt;a href=&quot;http://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt; to generate the files.  &lt;strong&gt;Jekyll&lt;/strong&gt; understands two special directories &lt;code&gt;_posts&lt;/code&gt; and &lt;code&gt;_layouts&lt;/code&gt;, copying any other files and directories in the root of the repo that do not begin with an &lt;code&gt;_&lt;/code&gt; directly to the static site.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Webby&lt;/strong&gt; generates a static site from set of source files (&lt;code&gt;content&lt;/code&gt;, &lt;code&gt;layouts&lt;/code&gt;, etc), placing the results in the &lt;code&gt;output_dir&lt;/code&gt; (defaults to &lt;code&gt;output&lt;/code&gt; but can be changed.)&lt;/p&gt;
&lt;p&gt;To make &lt;strong&gt;Webby&lt;/strong&gt; and &lt;strong&gt;GitHub Pages&lt;/strong&gt; co-exist, I restructured my repo and made the following changes to my existing &lt;strong&gt;Webby&lt;/strong&gt; site:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The root of the repo is the &lt;code&gt;output_dir&lt;/code&gt; for &lt;strong&gt;Webby&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;The &lt;strong&gt;Webby&lt;/strong&gt; site (source files) are in a subdirectory name &lt;code&gt;_webby&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;The &lt;code&gt;webby&lt;/code&gt; command line tool should be run from within the &lt;code&gt;_webby&lt;/code&gt; directory, not the root of the repo&lt;/li&gt;
	&lt;li&gt;The &lt;strong&gt;Webby&lt;/strong&gt; &lt;code&gt;clobber&lt;/code&gt; target is overridden to ignore the &lt;code&gt;_webby&lt;/code&gt; directory&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;Sitefile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;script src='http://gist.github.com/51667.js'&gt;&lt;/script&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;lib/override.rb&lt;/code&gt; Rake monkey patch to allow overriding tasks found &lt;a href=&quot;http://www.taknado.com/2007/7/30/overriding-rake-tasks&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;script src='http://gist.github.com/51669.js'&gt;&lt;/script&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;tasks/github_pages.rake&lt;/code&gt; redefines &lt;code&gt;clobber&lt;/code&gt;  to ignore the &lt;code&gt;_webby&lt;/code&gt; directory and the new (default) &lt;code&gt;clean_build&lt;/code&gt; task allows for file deletions&lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;script src='http://gist.github.com/51670.js'&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;The new workflow for adding a post to the new site is:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Change directory to &lt;code&gt;_webby&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;Generate a new blog post&lt;/li&gt;
	&lt;li&gt;Run &lt;code&gt;webby autobuild&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;Edit until completed&lt;/li&gt;
	&lt;li&gt;Commit all changes locally (&lt;code&gt;git add .&lt;/code&gt; from the root)&lt;/li&gt;
	&lt;li&gt;Push the changes&lt;/li&gt;
&lt;/ol&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt; Webby does not know if you have deleted a source file, by forcing the entire site to be rebuilt, the deletion is reflected in the generated static files.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Using Hoptoad With Script Runner</title>
    <link href="http://blog.leshill.org/blog/2009/01/12/using-hoptoad-with-script-runner.html" />
    
    <id>tag:blog.leshill.org,2009-01-12:1231772509</id>
    
    <published>2009-01-12T10:01:49-05:00</published>
    <updated>2009-01-12T10:01:49-05:00</updated>
    <content type="html">&lt;p&gt;I have been using &lt;a href=&quot;http://hoptoadapp.com/&quot;&gt;Hoptoad&lt;/a&gt; to track exceptions in my Rails apps for a while now.  The standard setup tracks exceptions in your controllers with a simple &lt;code&gt;include HoptoadNotifier::Catcher&lt;/code&gt; in your &lt;code&gt;application.rb&lt;/code&gt;, easy!&lt;/p&gt;
&lt;p&gt;However, I also wanted &lt;strong&gt;Hoptoad&lt;/strong&gt; to track any exception which occurred in a cron job that was running with &lt;code&gt;script/runner&lt;/code&gt;.  Again, a snap with &lt;strong&gt;Hoptoad&lt;/strong&gt;, take a look:&lt;/p&gt;
&lt;p&gt;&lt;script src='http://gist.github.com/46014.js'&gt;&lt;/script&gt;&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Using S3 Authenticated-Read With Paperclip</title>
    <link href="http://blog.leshill.org/blog/2009/01/01/using-s3-authenticated-read-with-paperclip.html" />
    
    <id>tag:blog.leshill.org,2009-01-01:1230821176</id>
    
    <published>2009-01-01T09:46:16-05:00</published>
    <updated>2009-01-01T09:46:16-05:00</updated>
    <content type="html">&lt;p&gt;&lt;a href=&quot;:http://www.thoughtbot.com/projects/paperclip&quot;&gt;Paperclip&lt;/a&gt; supports &lt;strong&gt;AWS S3&lt;/strong&gt; with a default of &lt;em&gt;public-read&lt;/em&gt; access policy.  This allows anyone who knows the URL of the resource to access it.&lt;/p&gt;
&lt;p&gt;For some applications, you might want a more restricted access policy.  The &lt;em&gt;authenticated-read&lt;/em&gt; access policy requires that the URL of the resource be presented by an authenticated user.&lt;/p&gt;
&lt;p&gt;To use &lt;em&gt;authenticated-read&lt;/em&gt; with &lt;strong&gt;Paperclip&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;set the &lt;code&gt;:s3_permissions&lt;/code&gt; option on your attachment:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;:s3_permssions =&amp;gt; 'authenticated-read'&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
	&lt;li&gt;use &lt;code&gt;RightAws::S3Interface#get_link&lt;/code&gt; to generate an &lt;em&gt;authenticated-read&lt;/em&gt; URL for the attachment:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;def s3_url(style = nil, time_limit = 15.minutes)
  attachment.s3.interface.get_link(attachment.s3_bucket.to_s, attachment.path(style), time_limit)
end &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you do not normally need to time limit the access, use &lt;code&gt;nil&lt;/code&gt; as the default value for &lt;code&gt;time_limit&lt;/code&gt;&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Tip: Rsync Options for Webby</title>
    <link href="http://blog.leshill.org/blog/2008/12/24/tip-rsync-options-for-webby.html" />
    
    <id>tag:blog.leshill.org,2008-12-24:1230162576</id>
    
    <published>2008-12-24T18:49:36-05:00</published>
    <updated>2008-12-24T18:49:36-05:00</updated>
    <content type="html">&lt;p&gt;If you are making substantial changes to your &lt;a href=&quot;http://github.com/TwP/based&quot;&gt;Webby&lt;/a&gt; site, you will have no doubt noticed that deleted files are not automatically removed from the &lt;code&gt;output&lt;/code&gt; directory or the deploy server.&lt;/p&gt;
&lt;p&gt;Use the following &lt;code&gt;Sitefile&lt;/code&gt; to:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;clear the output directory&lt;/li&gt;
	&lt;li&gt;build the site&lt;/li&gt;
	&lt;li&gt;deploy the site with &lt;strong&gt;rsync&lt;/strong&gt; with the checksum and delete options&lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;script src='http://gist.github.com/39827.js'&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt; &lt;strong&gt;Rsync&lt;/strong&gt; will only update changed files, and will detect deleted files.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt; Using the &lt;code&gt;--delete&lt;/code&gt; option will remove files from your deploy server; if you have mixed your &lt;strong&gt;Webby&lt;/strong&gt; content with server-only files&lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;, you should not use this.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt; You may want to reconsider doing that.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Hello Webby!</title>
    <link href="http://blog.leshill.org/blog/2008/12/22/hello-webby.html" />
    
    <id>tag:blog.leshill.org,2008-12-22:1229996093</id>
    
    <published>2008-12-22T20:34:53-05:00</published>
    <updated>2008-12-22T20:34:53-05:00</updated>
    <content type="html">&lt;p&gt;As of this post, I am using publishing &lt;strong&gt;Wonderland&lt;/strong&gt; with &lt;a href=&quot;http://webby.rubyforge.org&quot;&gt;Webby&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Some of the things I like about &lt;strong&gt;Webby&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;desktop based &amp;#8212; updates are made on my laptop, giving me a wider choice of tools for writing this blog &lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
	&lt;li&gt;static pages &amp;#8212; the blog site is served from &lt;strong&gt;Apache&lt;/strong&gt; as pure html files, there is no requirement to run a blogging server &lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
	&lt;li&gt;extensible &amp;#8212; &lt;strong&gt;Webby&lt;/strong&gt; can be extended both with rake tasks and Ruby code&lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt; Yes, this explains why I have not written a post recently.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt; This post was edited with MacVim.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt; I know, old school, some &lt;a href=&quot;http://www.nedbatchelder.com&quot;&gt;folks&lt;/a&gt; have been publishing this way for a long time.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn4&quot;&gt;&lt;sup&gt;4&lt;/sup&gt; Easy! A one-liner &lt;a href=&quot;http://gist.github.com&quot;&gt;gist&lt;/a&gt; filter.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Webby::Filters.register :gist { |input| input.gsub(/gist(\d+)\./) { |s| &quot;&amp;lt;script src='http://gist.github.com/#{$1}.js'&amp;gt;&amp;lt;/script&amp;gt;&quot; } }
&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>Information Addicted</title>
    <link href="http://blog.leshill.org/blog/2008/10/27/information-addicted.html" />
    
    <id>tag:blog.leshill.org,2008-10-27:34</id>
    
    <published>2008-10-27T10:01:58-04:00</published>
    <updated>2008-10-27T10:01:58-04:00</updated>
    <content type="html">&lt;p&gt;Sunday, the &lt;a href=&quot;http://www.nytimes.com/&quot;&gt;New York Times&lt;/a&gt; had an &lt;a href=&quot;http://www.nytimes.com/2008/10/26/technology/26boot.html?_r=1&amp;amp;scp=1&amp;amp;sq=boot%20time&amp;amp;st=cse&amp;amp;oref=slogin&quot;&gt;article&lt;/a&gt; about PC makers wanting to reduce boot times.  As a long-time Mac (and Linux) user, I see the problem differently.&lt;/p&gt;
&lt;p&gt;First, I rarely reboot my MacBook Pro; I just put the machine to sleep and wake it (and this is easily accomplished by closing and opening the lid).&lt;/p&gt;
&lt;p&gt;Second, I rarely reboot my phone; it also seems to sleep&lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Third, the context driving this &lt;em&gt;War on Boot Times&lt;/em&gt; is our increasing dependence on external information sources.  Think back to 1988&lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; and you may recall a time when finding out what movies to see while you were away from a newspaper was a non-trivial task.  Now with a smart phone or a WiFi connected laptop, all the information to answer your question is readily available at a moment&amp;#8217;s notice.  Think back to when you were out and would say: &amp;#8216;I wish I could Google that&amp;#8217;; now you just do it no matter where you are.&lt;/p&gt;
&lt;p&gt;The PC makers are fighting the last war.  This whole concept of reducing boot times is irrelevant.  The device should already be on and waiting on us.  No wait, make that &lt;em&gt;The Cloud&lt;/em&gt; &lt;strong&gt;is&lt;/strong&gt; already waiting on us.&lt;/p&gt;
&lt;p&gt;The trend is for &lt;strong&gt;more information, delivered faster, and requested instantaneously&lt;/strong&gt;.  Someone should tell the PC makers.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt; I am unsure exactly what the phone is doing when it is &lt;em&gt;asleep&lt;/em&gt;.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt; Moviefone was created in 1989.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Tip: Using Haml With ActionMailer</title>
    <link href="http://blog.leshill.org/blog/2008/10/19/tip-using-haml-with-actionmailer.html" />
    
    <id>tag:blog.leshill.org,2008-10-20:33</id>
    
    <published>2008-10-19T21:54:10-04:00</published>
    <updated>2008-10-19T21:54:10-04:00</updated>
    <content type="html">&lt;p&gt;You can use Haml to write your mailer views and still use the implicit multipart template feature by letting &lt;code&gt;ActionMailer&lt;/code&gt; know about Haml:&lt;/p&gt;
&lt;p&gt;&lt;script src='http://gist.github.com/38723.js'&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h2&gt;Update&lt;/h2&gt;
&lt;p&gt;This is no longer necessary with &lt;strong&gt;Rails 2.2&lt;/strong&gt; and &lt;strong&gt;Haml 2.0.5&lt;/strong&gt; .&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Git: Setting Your Upstream Default</title>
    <link href="http://blog.leshill.org/blog/2008/8/24/git-setting-your-upstream-default.html" />
    
    <id>tag:blog.leshill.org,2008-08-24:25</id>
    
    <published>2008-08-24T20:28:02-04:00</published>
    <updated>2008-08-24T20:28:02-04:00</updated>
    <content type="html">&lt;p&gt;I  recently set up a new repository on &lt;a href=&quot;http://www.github.com/&quot;&gt;github&lt;/a&gt;.  Creating the repository on github yields a page of instructions covering the two common scenarios: new and existing repositories.  After following the new repository instructions,  I had a repository on github, a local repository, and the following in response to my &lt;code&gt;git pull&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;You asked me to pull without telling me which branch you want to merge with, and 'branch.master.merge' in your configuration file does not tell me either.  Please name which branch you want to merge on the command line and try again (e.g. 'git pull &amp;lt;repository&amp;gt; &amp;lt;refspec&amp;gt;'). See git-pull(1) for details on the refspec.
  
If you often merge with the same branch, you may want to configure the following variables in your configuration file:
  
  branch.master.remote = &amp;lt;nickname&amp;gt;
  branch.master.merge = &amp;lt;remote-ref&amp;gt;
  remote.&amp;lt;nickname&amp;gt;.url = &amp;lt;url&amp;gt;
  remote.&amp;lt;nickname&amp;gt;.fetch = &amp;lt;refspec&amp;gt;
  
See git-config(1) for details.&lt;/code&gt;

&lt;/pre&gt;
&lt;p&gt;Not exactly what I wanted, and certainly not what I expected.  What I &lt;em&gt;expected&lt;/em&gt; was a local repository with the upstream for &lt;strong&gt;master&lt;/strong&gt; to be set to point at &lt;strong&gt;master&lt;/strong&gt; on the github repository.&lt;/p&gt;
&lt;p&gt;Setting this up can be done easily in two similar ways:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;You can edit the configuration file as directed by the error message&lt;/li&gt;
	&lt;li&gt;You can use &lt;code&gt;git config&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I opted for &lt;code&gt;git config&lt;/code&gt; as it was easier and required no thinking &amp;#8212; the commands are always the same&lt;sup class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;; here they are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% git config branch.master.remote origin
% git config branch.master.merge refs/heads/master&lt;/code&gt;&lt;/pre&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt; For the scenario of a local empty repository pushed up to a remote, where the remote will be the upstream master.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Focusing Autotest</title>
    <link href="http://blog.leshill.org/blog/2008/8/24/focusing-autotest.html" />
    
    <id>tag:blog.leshill.org,2008-08-24:24</id>
    
    <published>2008-08-24T10:53:57-04:00</published>
    <updated>2008-08-24T10:53:57-04:00</updated>
    <content type="html">&lt;p&gt;The usual &lt;a href=&quot;http://www.zenspider.com/ZSS/Products/ZenTest&quot;&gt;autotest&lt;/a&gt; workflow goes something like this:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Edit and save&lt;/li&gt;
	&lt;li&gt;Autotest runs associated specs&lt;/li&gt;
	&lt;li&gt;Are there failures?  Fix and start over&lt;/li&gt;
	&lt;li&gt;Autotest runs the entire suite&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sometimes though, you want autotest to just ignore most of your specs and focus on a few specs.&lt;/p&gt;
&lt;p&gt;Last week, while Kevin, Rick, and Yossef  (&lt;a href=&quot;http://bl.ogtastic.com&quot;&gt;OG&lt;/a&gt;) were here, they  shared an autotest tweak that does exactly that.&lt;/p&gt;
&lt;p&gt;The tweak allows you to specify a regular expression to limit the files which autotest watches; for example, to autotest only files matching &lt;code&gt;*user*.rb&lt;/code&gt; you would start autotest like so (&lt;em&gt;atest&lt;/em&gt; is an alias):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% atest user&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is the (lightly modified) code to do this; in your &lt;code&gt;.autotest&lt;/code&gt; file add:&lt;/p&gt;
&lt;p&gt;&lt;script src='http://gist.github.com/38700.js'&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;And in your &lt;code&gt;.bash_profile&lt;/code&gt; add:&lt;/p&gt;
&lt;p&gt;&lt;script src='http://gist.github.com/38702.js'&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;Now use the alias to invoke autotest.  For standard autotest behavior:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% atest&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To limit what autotest is watching, pass a regular expression (which can be a simple string):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% atest user.*html
&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
</feed>
