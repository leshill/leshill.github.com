<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Les Hill</title>
  <link href="http://feeds2.feedburner.com/leshill" type="application/atom+xml" rel="self" />
  <link href="http://blog.leshill.org/" type="text/html" rel="alternate" />
  <updated>2011-08-14T23:42:29-07:00</updated>
  <author>
    <name>Les Hill</name>
    <email>blog@leshill.org</email>
  </author>
  <id>http://blog.leshill.org/</id>
  
  <entry>
    <title>jQuery Validation plugin and Backbone</title>
    <link rel="alternate" type="text/html" href="http://blog.leshill.org/blog/2011/08/14/jquery-validation-plugin-and-backbone.html" />
    
    <id>tag:blog.leshill.org,2011-08-14:1313351271</id>
    
    <published>2011-08-14T12:47:51-07:00</published>
    <updated>2011-08-14T12:47:51-07:00</updated>
    <content type="html">&lt;p&gt;Ready for some heresy? Let&amp;#8217;s validate a &lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone.js&lt;/a&gt; model using the &lt;a href=&quot;http://docs.jquery.com/Plugins/validation&quot;&gt;jQuery Validation plugin&lt;/a&gt; and a &lt;code&gt;View&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are interested in the heresy, skip to the bottom.&lt;/p&gt;
&lt;p&gt;Here is a simple sign up form for a Rails app. We want to validate that the user has entered an email address and filled in the password. Additionally, we would like to know if the email entered is available, so we will use AJAX to call down to the server to check availability dynamically.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;accept-charset&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;UTF-8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new_user&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt;   &lt;span class=&quot;ta&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;margin:0;padding:0;display:inline&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt;     &lt;span class=&quot;ta&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;âœ“&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt;     &lt;span class=&quot;ta&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;authenticity_token&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;dkjfhioeutgdkjdkfj&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt;   &lt;span class=&quot;ta&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;ta&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt;     &lt;span class=&quot;ta&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user_email&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;Your email&lt;span class=&quot;ta&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;ta&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;text required email&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user_email&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user[email]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt;   &lt;span class=&quot;ta&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt;   &lt;span class=&quot;ta&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;11&lt;/span&gt;     &lt;span class=&quot;ta&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user_password&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;Choose a password&lt;span class=&quot;ta&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;12&lt;/span&gt;     &lt;span class=&quot;ta&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;autocomplete&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;text required&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user_password&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user[password]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;13&lt;/span&gt;   &lt;span class=&quot;ta&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;14&lt;/span&gt;   &lt;span class=&quot;ta&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;buttons&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;15&lt;/span&gt;     &lt;span class=&quot;ta&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Get started&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;16&lt;/span&gt;   &lt;span class=&quot;ta&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;As a starting point, this is how we might use Validation with jQuery to validate our form.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;pd&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;#new_user&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;).validate({
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt;   &lt;span class=&quot;ke&quot;&gt;rules&lt;/span&gt;: {
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt;     &lt;span class=&quot;ke&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user[email]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: {
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt;       &lt;span class=&quot;ke&quot;&gt;required&lt;/span&gt;: &lt;span class=&quot;pc&quot;&gt;true&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt;       &lt;span class=&quot;ke&quot;&gt;email&lt;/span&gt;: &lt;span class=&quot;pc&quot;&gt;true&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt;       &lt;span class=&quot;ke&quot;&gt;remote&lt;/span&gt;: &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;/users/email_available&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt;     },
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;ke&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user[password]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: {
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt;       &lt;span class=&quot;ke&quot;&gt;required&lt;/span&gt;: &lt;span class=&quot;pc&quot;&gt;true&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt;       &lt;span class=&quot;ke&quot;&gt;minlength&lt;/span&gt;: &lt;span class=&quot;i&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;11&lt;/span&gt;     }
&lt;span class=&quot;no&quot;&gt;12&lt;/span&gt;   },
&lt;span class=&quot;no&quot;&gt;13&lt;/span&gt;   &lt;span class=&quot;ke&quot;&gt;messages&lt;/span&gt;: {
&lt;span class=&quot;no&quot;&gt;14&lt;/span&gt;     &lt;span class=&quot;ke&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user[email]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;: {
&lt;span class=&quot;no&quot;&gt;15&lt;/span&gt;       &lt;span class=&quot;ke&quot;&gt;remote&lt;/span&gt;: &lt;span class=&quot;pd&quot;&gt;$&lt;/span&gt;.format(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{0} has already been taken&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt;16&lt;/span&gt;     }
&lt;span class=&quot;no&quot;&gt;17&lt;/span&gt;   },
&lt;span class=&quot;no&quot;&gt;18&lt;/span&gt;   &lt;span class=&quot;fu&quot;&gt;submitHandler&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(form) {
&lt;span class=&quot;no&quot;&gt;19&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; form = &lt;span class=&quot;pd&quot;&gt;$&lt;/span&gt;(form);
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;20&lt;/strong&gt;&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; form_data = form.formParams()
&lt;span class=&quot;no&quot;&gt;21&lt;/span&gt;     &lt;span class=&quot;pd&quot;&gt;$&lt;/span&gt;.ajax({
&lt;span class=&quot;no&quot;&gt;22&lt;/span&gt;       &lt;span class=&quot;ke&quot;&gt;url&lt;/span&gt;: form.attr(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;),
&lt;span class=&quot;no&quot;&gt;23&lt;/span&gt;       &lt;span class=&quot;ke&quot;&gt;dataType&lt;/span&gt;: &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt;24&lt;/span&gt;       &lt;span class=&quot;ke&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt;25&lt;/span&gt;       &lt;span class=&quot;ke&quot;&gt;data&lt;/span&gt;: form_data,
&lt;span class=&quot;no&quot;&gt;26&lt;/span&gt;       &lt;span class=&quot;fu&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; (data, textStatus, xhr) {
&lt;span class=&quot;no&quot;&gt;27&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;// code for cleaning up form and showing response here...&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;28&lt;/span&gt;       },
&lt;span class=&quot;no&quot;&gt;29&lt;/span&gt;       &lt;span class=&quot;fu&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; (xhr, textStatus, errorThrown) {
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;30&lt;/strong&gt;&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;// code for showing errors here...&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;31&lt;/span&gt;       }
&lt;span class=&quot;no&quot;&gt;32&lt;/span&gt;     });
&lt;span class=&quot;no&quot;&gt;33&lt;/span&gt;   }
&lt;span class=&quot;no&quot;&gt;34&lt;/span&gt; });&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;If you have not used the Validation plugin before, it is a simple declarative way to validate forms. You specify the rules which apply to your form&amp;#8217;s input elements and they are checked as the user enters data and on submit. All the usual validations are provided by the plugin, including &lt;code&gt;remote&lt;/code&gt; which will make an Ajax call to your server to check the input. Messages for failed validations can be customized. And there are quite a few options available to change the behavior of the plugin.&lt;/p&gt;
&lt;p&gt;Now lets do this with a Backbone.js &lt;code&gt;View&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We will create a basic &lt;code&gt;FormView&lt;/code&gt; class to handle both create and edit, using a templated form. That is the extent of our brief for this blog post, a much more complete class is left as an exercise for the reader.&lt;/p&gt;
&lt;p&gt;Oh and we are using &lt;a href=&quot;http://jashkenas.github.com/coffee-script/&quot;&gt;CoffeeScript&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;cl&quot;&gt;FormView&lt;/span&gt; extends &lt;span class=&quot;co&quot;&gt;Backbone&lt;/span&gt;.&lt;span class=&quot;co&quot;&gt;View&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt;   &lt;span class=&quot;sy&quot;&gt;initialize:&lt;/span&gt; -&amp;gt;
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt;     &lt;span class=&quot;iv&quot;&gt;@template&lt;/span&gt; = _.template(&lt;span class=&quot;er&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;iv&quot;&gt;@templateSelector&lt;/span&gt;).html())
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt;     &lt;span class=&quot;iv&quot;&gt;@validationOptions&lt;/span&gt; = &lt;span class=&quot;iv&quot;&gt;@options&lt;/span&gt;.validationOptions
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;sy&quot;&gt;fetchParams:&lt;/span&gt; (form) -&amp;gt;
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt;     rawdata = &lt;span class=&quot;er&quot;&gt;$&lt;/span&gt;(form).serialize()
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt;     data = &lt;span class=&quot;gv&quot;&gt;$.&lt;/span&gt;deparam(rawdata)
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt;     data[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;sy&quot;&gt;render:&lt;/span&gt; -&amp;gt;
&lt;span class=&quot;no&quot;&gt;12&lt;/span&gt;     template_values = &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;iv&quot;&gt;@model&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;iv&quot;&gt;@model&lt;/span&gt;.toJSON() &lt;span class=&quot;r&quot;&gt;else&lt;/span&gt; {}
&lt;span class=&quot;no&quot;&gt;13&lt;/span&gt;     &lt;span class=&quot;er&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;iv&quot;&gt;@el&lt;/span&gt;).html(&lt;span class=&quot;iv&quot;&gt;@template&lt;/span&gt;(template_values))
&lt;span class=&quot;no&quot;&gt;14&lt;/span&gt;     opts = { &lt;span class=&quot;sy&quot;&gt;submitHandler:&lt;/span&gt; &lt;span class=&quot;iv&quot;&gt;@submit&lt;/span&gt; }
&lt;span class=&quot;no&quot;&gt;15&lt;/span&gt;     opts = _.extend(opts, &lt;span class=&quot;iv&quot;&gt;@validationOptions&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt;16&lt;/span&gt;     &lt;span class=&quot;er&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;iv&quot;&gt;@el&lt;/span&gt;).find(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;).validate(opts)
&lt;span class=&quot;no&quot;&gt;17&lt;/span&gt;     this
&lt;span class=&quot;no&quot;&gt;18&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;19&lt;/span&gt;   &lt;span class=&quot;sy&quot;&gt;submit:&lt;/span&gt; (form) =&amp;gt;
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;20&lt;/strong&gt;&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;iv&quot;&gt;@model&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;21&lt;/span&gt;       &lt;span class=&quot;iv&quot;&gt;@model&lt;/span&gt;.save(fetchParams(form))
&lt;span class=&quot;no&quot;&gt;22&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;23&lt;/span&gt;       &lt;span class=&quot;iv&quot;&gt;@collection&lt;/span&gt;.create(fetchParams(form))
&lt;span class=&quot;no&quot;&gt;24&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;cl&quot;&gt;User&lt;/span&gt; extends &lt;span class=&quot;co&quot;&gt;Backbone&lt;/span&gt;.&lt;span class=&quot;co&quot;&gt;Model&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;26&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;27&lt;/span&gt; users = new &lt;span class=&quot;co&quot;&gt;Collection&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;28&lt;/span&gt;   &lt;span class=&quot;sy&quot;&gt;model:&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;User&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;29&lt;/span&gt;   &lt;span class=&quot;sy&quot;&gt;url:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;/users&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;30&lt;/strong&gt;&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;31&lt;/span&gt; view = new &lt;span class=&quot;co&quot;&gt;FormView&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;32&lt;/span&gt;   &lt;span class=&quot;sy&quot;&gt;collection:&lt;/span&gt; users
&lt;span class=&quot;no&quot;&gt;33&lt;/span&gt;   &lt;span class=&quot;sy&quot;&gt;el:&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;#signup_form&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt;34&lt;/span&gt;   &lt;span class=&quot;sy&quot;&gt;templateSelector:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;#new_user_form&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;35&lt;/span&gt;   validationOptions:
&lt;span class=&quot;no&quot;&gt;36&lt;/span&gt;     rules:
&lt;span class=&quot;no&quot;&gt;37&lt;/span&gt;       &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user[email]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;:
&lt;span class=&quot;no&quot;&gt;38&lt;/span&gt;         &lt;span class=&quot;sy&quot;&gt;remote:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;/users/email_available&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;39&lt;/span&gt;       &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user[password]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;:
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;40&lt;/strong&gt;&lt;/span&gt;         &lt;span class=&quot;sy&quot;&gt;minlength:&lt;/span&gt; &lt;span class=&quot;i&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;41&lt;/span&gt;     messages:
&lt;span class=&quot;no&quot;&gt;42&lt;/span&gt;       &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user[email]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;:
&lt;span class=&quot;no&quot;&gt;43&lt;/span&gt;         &lt;span class=&quot;sy&quot;&gt;remote:&lt;/span&gt; &lt;span class=&quot;gv&quot;&gt;$.&lt;/span&gt;format(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{0} has already been taken&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt;44&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;45&lt;/span&gt; view.render()&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;FormView&lt;/code&gt; class can handle either creating a new model or editing an existing model. When creating a new object pass in the &lt;code&gt;collection&lt;/code&gt; as an option, and when editing an existing model pass in the &lt;code&gt;model&lt;/code&gt; as an option. You need to specify the &lt;code&gt;el&lt;/code&gt; where the &lt;code&gt;FormView&lt;/code&gt; will render the form, and the &lt;code&gt;templateSelector&lt;/code&gt; that will identify the &lt;a href=&quot;http://documentcloud.github.com/underscore/#template&quot;&gt;Underscore.js template&lt;/a&gt;. And of course you need to specify the validation rules, messages, and options for the Validation plugin, but &lt;strong&gt;not&lt;/strong&gt; a &lt;code&gt;submitHandler&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Fire things up by calling &lt;code&gt;render&lt;/code&gt;, and our form will now validate and if successfully validated, submit. Done!&lt;/p&gt;
&lt;p&gt;Here are some things to note:&lt;/p&gt;
&lt;p&gt;We are using classes on the inputs to indicate the basic Validation rules to apply.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;validationOptions&lt;/code&gt; do not include the &lt;code&gt;submitHandler&lt;/code&gt;, which is added by the &lt;code&gt;FormView&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We are also using the &lt;code&gt;jquery.ba-bbq&lt;/code&gt; plugin for the &lt;code&gt;deparam&lt;/code&gt; method it adds to jQuery&lt;sup class=&quot;footnote&quot; id=&quot;fnr1&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;h2&gt;Heresy!&lt;/h2&gt;
&lt;p&gt;On to the heresy. MVC dogma would say that the model should be responsible for its validation, and here the view is doing the validation &amp;mdash; the Validation plugin is part of the &lt;code&gt;FormView&lt;/code&gt; view internals.&lt;/p&gt;
&lt;h3&gt;Pragmatism&lt;/h3&gt;
&lt;p&gt;The existing model validation scheme for Backbone.js is weak. There is no easy declarative way to validate models at the moment. I am hopeful that Derrick Bailey&amp;#8217;s &lt;a href=&quot;https://github.com/derickbailey/backbone.modelbinding&quot;&gt;Backbone.ModelBinding&lt;/a&gt; will eventually lead to an answer. On the other hand, the jQuery Validation plugin already works and works well with very little coding required.&lt;/p&gt;
&lt;h3&gt;Does &amp;lsquo;dogma&amp;rsquo; even apply?&lt;/h3&gt;
&lt;p&gt;The remote email validation does not find neatly into the usual MVC validation scheme. If you have done this in Rails, you no doubt have written code that is not part of the normal validation process to achieve this. What is being validated is a single data field from a model independent of the model itself &amp;mdash; and Backbone.js is no different: &lt;code&gt;validate&lt;/code&gt; operates on a model instance.&lt;/p&gt;
&lt;p&gt;Another way to think of this is that the view is gathering and validating input before passing it onto the model. In this case, the validation is part of the behavior of the form and the individual inputs, with the view doing the availabilty check as soon as there is an email address entered by the user. Once the view is valid, the submit passes the data onto the model. And of course, the model on the server is doing its own validations. And the model on the client? It is a one-liner, just a data container for passing data cleanly along from the view (which is doing the interesting work) to the model on the server. The crux is that the input &amp;ldquo;validation&amp;rdquo; is substantially more than just an &amp;ldquo;email must be unique&amp;rdquo; validation on the model, it is the user experience around entering potentially incorrect data.&lt;/p&gt;
&lt;p&gt;I am not convinced that MVC is misplaced here. Given a different framework, the model&amp;#8217;s validations could be flexible enough to really accomodate this scenario. Another possiblity is that this MVC is widget-y and hidden within my Backbone.js view. But for the time being, I am happy to keep shipping and live with this heresy.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;a href=&quot;#fnr1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; Why is this not in jQuery? Why is something like this not a standalone plugin?&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Using Resque and Resque Scheduler on Heroku</title>
    <link rel="alternate" type="text/html" href="http://blog.leshill.org/blog/2011/04/03/using-resque-and-resque-scheduler-on-heroku.html" />
    
    <id>tag:blog.leshill.org,2011-04-03:1301886603</id>
    
    <published>2011-04-03T20:10:03-07:00</published>
    <updated>2011-04-03T20:10:03-07:00</updated>
    <content type="html">&lt;div class='update'&gt;
&lt;h2&gt;Updated! July 26, 2011&lt;/h2&gt;
&lt;p&gt;Now covers both the &lt;code&gt;Bamboo&lt;/code&gt; and &lt;code&gt;Cedar&lt;/code&gt; stacks and incorporates feedback from Scott Watermasysk and our own experiences using Resque on Heroku.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When it comes to background processing, I use &lt;a href=&quot;https://github.com/defunkt/resque&quot;&gt;resque&lt;/a&gt; &amp;mdash; I do not even consider the other popular alternative &lt;a href=&quot;https://github.com/tobi/delayed_job&quot;&gt;delayed_job&lt;/a&gt;. I seem to be in good company, this is a tweet from &lt;a href=&quot;https://twitter.com/#!/tobi/status/11334664846&quot;&gt;@tobi&lt;/a&gt;, the author of &lt;code&gt;delayed_job&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I feel like I have to write a imatrix style email about delayed_job and resque&amp;#8230;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately, on Heroku, the sanctioned way to do background processing is to use a worker with &lt;code&gt;delayed_job&lt;/code&gt;. Definitely not an option. A little googling turned up two blog posts&lt;sup class=&quot;footnote&quot; id=&quot;fnr1&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; that give us almost all the pieces we need to do this very inexpensively&lt;sup class=&quot;footnote&quot; id=&quot;fnr2&quot;&gt;&lt;a href=&quot;#fn2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Getting this to work with &lt;code&gt;resque-scheduler&lt;/code&gt; was a little tricky, so I have documented the setup here.&lt;/p&gt;
&lt;p&gt;There are three parts to this blog post, using &lt;code&gt;resque&lt;/code&gt;, using &lt;code&gt;resque-scheduler&lt;/code&gt; on &lt;code&gt;Bamboo&lt;/code&gt;, and using &lt;code&gt;resque-scheduler&lt;/code&gt; on &lt;code&gt;Cedar&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Resque&lt;/h2&gt;
&lt;p&gt;To start, we need a &lt;code&gt;Redis&lt;/code&gt; database to use, &lt;a href=&quot;http://redistogo.com&quot;&gt;RedisToGo&lt;/a&gt; offers a nano version for free. Add it to your Heroko app.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% heroku addons:add redistogo:nano&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To use &lt;code&gt;resque&lt;/code&gt;, add the gem.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; gem &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Make your class(es) work with &lt;code&gt;resque&lt;/code&gt;, and then extend the class(es) with &lt;code&gt;HerokuAutoScaler::AutoScaling&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;cl&quot;&gt;MyStuff&lt;/span&gt; &amp;lt; &lt;span class=&quot;co&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;co&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt;   extend &lt;span class=&quot;co&quot;&gt;HerokuAutoScaler&lt;/span&gt;::&lt;span class=&quot;co&quot;&gt;AutoScaling&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pc&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;queue&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt;     &lt;span class=&quot;sy&quot;&gt;:my_queue&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pc&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;perform&lt;/span&gt;(*args)
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# work done here&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;HerokuResqueAutoscale&lt;/code&gt; should be somewhere in your load path (&lt;code&gt;app/models&lt;/code&gt; works.)&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;  1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Based on the ideas from: http://blog.darkhax.com/2010/07/30/auto-scale-your-resque-workers-on-heroku&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;  2&lt;/span&gt; require &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;heroku&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;  3&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;  4&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Scale workers on Heroku automatically as your Resque queue grows.&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;  5&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Mixin the +AutoScaling+ module into your models to get the behavior.&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;  6&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;  7&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#   class MyModel &amp;lt; ActiveRecord::Base&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;  8&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#     extend HerokuAutoScaler::AutoScaling&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;  9&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#   end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; &lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 11&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# And configure in an initializer +config/initializers/heroku_workers.rb+:&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 12&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 13&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#   HerokuAutoScaler.configure do&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 14&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#     scale_by {|pending| }&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 15&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#   end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 16&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 17&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# The default scaling is non-linear:&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 18&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# * 1 job =&amp;gt; 1 worker&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 19&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# * 15 jobs =&amp;gt; 2 workers&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; &lt;strong&gt;20&lt;/strong&gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# * 25 jobs =&amp;gt; 3 workers&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 21&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# * 40 jobs =&amp;gt; 4 workers&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 22&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# * 60+ jobs =&amp;gt; 5 workers&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 23&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;cl&quot;&gt;HerokuAutoScaler&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 24&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;cl&quot;&gt;AutoScaling&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 25&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;after_perform_scale_down&lt;/span&gt;(*args)
&lt;span class=&quot;no&quot;&gt; 26&lt;/span&gt;       &lt;span class=&quot;co&quot;&gt;HerokuAutoScaler&lt;/span&gt;.scale_down!
&lt;span class=&quot;no&quot;&gt; 27&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 28&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 29&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;after_enqueue_scale_up&lt;/span&gt;(*args)
&lt;span class=&quot;no&quot;&gt; &lt;strong&gt;30&lt;/strong&gt;&lt;/span&gt;       &lt;span class=&quot;co&quot;&gt;HerokuAutoScaler&lt;/span&gt;.scale_up!
&lt;span class=&quot;no&quot;&gt; 31&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 32&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 33&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;on_failure&lt;/span&gt;(e, *args)
&lt;span class=&quot;no&quot;&gt; 34&lt;/span&gt;       &lt;span class=&quot;co&quot;&gt;Rails&lt;/span&gt;.logger.info(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Resque Exception for [&lt;/span&gt;&lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;pc&quot;&gt;self&lt;/span&gt;.to_s&lt;span class=&quot;idl&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;#{&lt;/span&gt;args.join(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class=&quot;idl&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;] : &lt;/span&gt;&lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;#{&lt;/span&gt;e.to_s&lt;span class=&quot;idl&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt; 35&lt;/span&gt;       &lt;span class=&quot;co&quot;&gt;HerokuAutoScaler&lt;/span&gt;.scale_down!
&lt;span class=&quot;no&quot;&gt; 36&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 37&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 38&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 39&lt;/span&gt;   extend &lt;span class=&quot;pc&quot;&gt;self&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; &lt;strong&gt;40&lt;/strong&gt;&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 41&lt;/span&gt;   attr_accessor &lt;span class=&quot;sy&quot;&gt;:ignore_scaling&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 42&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 43&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;clear_resque&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 44&lt;/span&gt;     &lt;span class=&quot;co&quot;&gt;Resque&lt;/span&gt;::&lt;span class=&quot;co&quot;&gt;Worker&lt;/span&gt;.all.each {|w| w.unregister_worker}
&lt;span class=&quot;no&quot;&gt; 45&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 46&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 47&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;configure&lt;/span&gt;(&amp;amp;block)
&lt;span class=&quot;no&quot;&gt; 48&lt;/span&gt;     instance_eval(&amp;amp;block) &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; block_given?
&lt;span class=&quot;no&quot;&gt; 49&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; &lt;strong&gt;50&lt;/strong&gt;&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 51&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;scale_by&lt;/span&gt;(&amp;amp;block)
&lt;span class=&quot;no&quot;&gt; 52&lt;/span&gt;     &lt;span class=&quot;pc&quot;&gt;self&lt;/span&gt;.scaling_block = block
&lt;span class=&quot;no&quot;&gt; 53&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 54&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 55&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;scale_down!&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 56&lt;/span&gt;     &lt;span class=&quot;co&quot;&gt;Rails&lt;/span&gt;.logger.info &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Scale down j:&lt;/span&gt;&lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;#{&lt;/span&gt;job_count&lt;span class=&quot;idl&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt; w:&lt;/span&gt;&lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;#{&lt;/span&gt;resque_workers&lt;span class=&quot;idl&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 57&lt;/span&gt;     &lt;span class=&quot;pc&quot;&gt;self&lt;/span&gt;.heroku_workers = &lt;span class=&quot;i&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; job_count == &lt;span class=&quot;i&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; resque_workers == &lt;span class=&quot;i&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 58&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 59&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; &lt;strong&gt;60&lt;/strong&gt;&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;scale_up!&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 61&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; ignore_scaling
&lt;span class=&quot;no&quot;&gt; 62&lt;/span&gt;     pending = job_count
&lt;span class=&quot;no&quot;&gt; 63&lt;/span&gt;     &lt;span class=&quot;pc&quot;&gt;self&lt;/span&gt;.heroku_workers = workers_for(pending) &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; pending &amp;gt; &lt;span class=&quot;i&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 64&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 65&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 66&lt;/span&gt;   private
&lt;span class=&quot;no&quot;&gt; 67&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 68&lt;/span&gt;   attr_accessor &lt;span class=&quot;sy&quot;&gt;:scaling_block&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 69&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; &lt;strong&gt;70&lt;/strong&gt;&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;heroku&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 71&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;HEROKU_USER&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;] &amp;amp;&amp;amp; &lt;span class=&quot;co&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;HEROKU_PASSWORD&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;] &amp;amp;&amp;amp; &lt;span class=&quot;co&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class=&quot;no&quot;&gt; 72&lt;/span&gt;       &lt;span class=&quot;iv&quot;&gt;@heroku&lt;/span&gt; ||= &lt;span class=&quot;co&quot;&gt;Heroku&lt;/span&gt;::&lt;span class=&quot;co&quot;&gt;Client&lt;/span&gt;.new(&lt;span class=&quot;co&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;HEROKU_USER&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class=&quot;co&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;HEROKU_PASSWORD&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;])
&lt;span class=&quot;no&quot;&gt; 73&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 74&lt;/span&gt;       &lt;span class=&quot;pc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 75&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 76&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 77&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 78&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;heroku_workers=&lt;/span&gt;(qty)
&lt;span class=&quot;no&quot;&gt; 79&lt;/span&gt;     heroku.set_workers(&lt;span class=&quot;co&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;HEROKU_APP&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;], qty) &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; heroku
&lt;span class=&quot;no&quot;&gt; &lt;strong&gt;80&lt;/strong&gt;&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 81&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 82&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;job_count&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 83&lt;/span&gt;     &lt;span class=&quot;co&quot;&gt;Resque&lt;/span&gt;.info[&lt;span class=&quot;sy&quot;&gt;:pending&lt;/span&gt;]
&lt;span class=&quot;no&quot;&gt; 84&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 85&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 86&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;resque_workers&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 87&lt;/span&gt;     &lt;span class=&quot;co&quot;&gt;Resque&lt;/span&gt;.info[&lt;span class=&quot;sy&quot;&gt;:working&lt;/span&gt;]
&lt;span class=&quot;no&quot;&gt; 88&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 89&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; &lt;strong&gt;90&lt;/strong&gt;&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;workers_for&lt;/span&gt;(pending_jobs)
&lt;span class=&quot;no&quot;&gt; 91&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; scaling_block
&lt;span class=&quot;no&quot;&gt; 92&lt;/span&gt;       scaling_block.call(pending_jobs)
&lt;span class=&quot;no&quot;&gt; 93&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 94&lt;/span&gt;       [
&lt;span class=&quot;no&quot;&gt; 95&lt;/span&gt;         { &lt;span class=&quot;sy&quot;&gt;:workers&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;c&quot;&gt;# This many workers&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 96&lt;/span&gt;           &lt;span class=&quot;sy&quot;&gt;:job_count&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# For this many jobs or more, until the next level&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 97&lt;/span&gt;       },
&lt;span class=&quot;no&quot;&gt; 98&lt;/span&gt;         { &lt;span class=&quot;sy&quot;&gt;:workers&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;2&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt; 99&lt;/span&gt;           &lt;span class=&quot;sy&quot;&gt;:job_count&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;15&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;100&lt;/strong&gt;&lt;/span&gt;       },
&lt;span class=&quot;no&quot;&gt;101&lt;/span&gt;         { &lt;span class=&quot;sy&quot;&gt;:workers&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;3&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt;102&lt;/span&gt;           &lt;span class=&quot;sy&quot;&gt;:job_count&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;25&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;103&lt;/span&gt;       },
&lt;span class=&quot;no&quot;&gt;104&lt;/span&gt;         { &lt;span class=&quot;sy&quot;&gt;:workers&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;4&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt;105&lt;/span&gt;           &lt;span class=&quot;sy&quot;&gt;:job_count&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;40&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;106&lt;/span&gt;       },
&lt;span class=&quot;no&quot;&gt;107&lt;/span&gt;         { &lt;span class=&quot;sy&quot;&gt;:workers&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;5&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt;108&lt;/span&gt;           &lt;span class=&quot;sy&quot;&gt;:job_count&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;60&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;109&lt;/span&gt;       }
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;110&lt;/strong&gt;&lt;/span&gt;       ].reverse_each &lt;span class=&quot;r&quot;&gt;do&lt;/span&gt; |scale_info|
&lt;span class=&quot;no&quot;&gt;111&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;# Run backwards so it gets set to the highest value first&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;112&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;# Otherwise if there were 70 jobs, it would get set to 1, then 2, then 3, etc&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;113&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;114&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;# If we have a job count greater than or equal to the job limit for this scale info&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;115&lt;/span&gt;         &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; pending_jobs &amp;gt;= scale_info[&lt;span class=&quot;sy&quot;&gt;:job_count&lt;/span&gt;]
&lt;span class=&quot;no&quot;&gt;116&lt;/span&gt;           &lt;span class=&quot;r&quot;&gt;return&lt;/span&gt; scale_info[&lt;span class=&quot;sy&quot;&gt;:workers&lt;/span&gt;]
&lt;span class=&quot;no&quot;&gt;117&lt;/span&gt;         &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;118&lt;/span&gt;       &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;119&lt;/span&gt;     &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;120&lt;/strong&gt;&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;121&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Scaling works by calling into the &lt;code&gt;heroku&lt;/code&gt; gem and issuing commands to your Heroku application; you need to have the &lt;code&gt;heroku&lt;/code&gt; gem and your Heroku credentials available. Add the &lt;code&gt;heroku&lt;/code&gt; gem.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# needs to be in your deployment environment, not just dev!&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt; gem &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;heroku&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You need to add three &lt;em&gt;config&lt;/em&gt; variables to Heroku to allow your workers to auto-scale. Check out my previous Heroku &lt;a href=&quot;http://blog.leshill.org/blog/2010/11/02/heroku-environment-variables.html&quot;&gt;blog post&lt;/a&gt; for a neat way to manage your &lt;em&gt;config&lt;/em&gt; variables. Set the &lt;em&gt;config&lt;/em&gt; variables.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HEROKU_APP = your_app
HEROKU_USER = your_user
HEROKU_PASSWORD = your_password&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add this task file to &lt;code&gt;lib/tasks/resque.task&lt;/code&gt; to run as many normal &lt;code&gt;resque&lt;/code&gt; workers as needed.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; require &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque/tasks&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt; task &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque:setup&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;sy&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;QUEUE&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;] = &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;6&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;7&lt;/span&gt; desc &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Alias for resque:work (To run workers on Heroku)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;8&lt;/span&gt; task &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;jobs:work&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque:work&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Finally, we also need to make sure &lt;code&gt;resque&lt;/code&gt; does not get a stale db connection&lt;sup class=&quot;footnote&quot; id=&quot;fnr3&quot;&gt;&lt;a href=&quot;#fn3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;, add this to &lt;code&gt;config/initializers/resque.rb&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;Resque&lt;/span&gt;.after_fork = &lt;span class=&quot;co&quot;&gt;Proc&lt;/span&gt;.new { &lt;span class=&quot;co&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;co&quot;&gt;Base&lt;/span&gt;.establish_connection }&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Deploy, and watch your workers scale as needed!&lt;sup class=&quot;footnote&quot; id=&quot;fnr4&quot;&gt;&lt;a href=&quot;#fn4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2&gt;Resque Scheduler&lt;/h2&gt;
&lt;p&gt;Out of the box, &lt;code&gt;resque-scheduler&lt;/code&gt; will not work with our auto-scaling code because it is broken. Specifically, it does not invoke hooks (like &lt;code&gt;after_enqueue&lt;/code&gt;!) when adding jobs to the &lt;code&gt;resque&lt;/code&gt; queues. &lt;a href=&quot;https://twitter.com/l4rk&quot;&gt;@l4rk&lt;/a&gt; and I have submitted a patch that has been pulled in but does not look like it has been released as a gem yet. Thankfully, &lt;code&gt;bundler&lt;/code&gt; lets us specify the github repo directly.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; gem &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque-scheduler&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;sy&quot;&gt;require:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque_scheduler&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;sy&quot;&gt;git:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;git://github.com/bvandenbos/resque-scheduler&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;If you are using a schedule file, load it in an initializer &lt;code&gt;config/initializers/scheduler.rb&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;Resque&lt;/span&gt;.schedule = &lt;span class=&quot;co&quot;&gt;YAML&lt;/span&gt;.load_file(&lt;span class=&quot;co&quot;&gt;File&lt;/span&gt;.join(&lt;span class=&quot;co&quot;&gt;File&lt;/span&gt;.dirname(&lt;span class=&quot;pc&quot;&gt;__FILE__&lt;/span&gt;), &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;../resque_schedule.yml&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;Using &lt;code&gt;resque-scheduler&lt;/code&gt; on the &lt;code&gt;Bamboo&lt;/code&gt; stack&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;resque-scheduler&lt;/code&gt; works by having a long-running worker continually pushing jobs to the &lt;code&gt;resque&lt;/code&gt; queues as scheduled. The default &lt;code&gt;Bamboo&lt;/code&gt; stack on Heroku does not make any allowance for different worker types. This is a problem. When scaling down, Heroku has no way of knowing which worker is &amp;#8216;working&amp;#8217; or &amp;#8216;scheduling&amp;#8217; or &amp;#8216;idle&amp;#8217;.&lt;/p&gt;
&lt;p&gt;And the solution is not very clean. Use the &lt;code&gt;Cedar&lt;/code&gt; stack if you can (see below).&lt;/p&gt;
&lt;p&gt;The only way to isolate a long-running worker (the scheduler) from scaling workers is to use a second Heroku application instance to run the long-running worker. In our case, the easiest way to do this is to redeploy the same codebase to another Heroku instance and set a filter to redirect any http requests to the original app.&lt;/p&gt;
&lt;p&gt;There are four things to configure on your second Heroku instance:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;point to the same redis instance by setting the RedisToGo variable manually&lt;/li&gt;
	&lt;li&gt;make sure that the &lt;code&gt;HEROKU_APP&lt;/code&gt;, &lt;code&gt;HEROKU_USER&lt;/code&gt;, and &lt;code&gt;HEROKU_PASSWORD&lt;/code&gt; variables (explained earlier) are set identically (you want to affect the original Heroku instance)&lt;/li&gt;
	&lt;li&gt;use the Heroku app or console to run one worker&lt;/li&gt;
	&lt;li&gt;use the following task file&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; require &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque/tasks&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt; require &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque_scheduler/tasks&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;4&lt;/span&gt; task &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque:setup&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;sy&quot;&gt;:environment&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;5&lt;/span&gt; task &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque:scheduler_setup&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;sy&quot;&gt;:environment&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;6&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;7&lt;/span&gt; task &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;jobs:work&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque:scheduler&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;Using the &lt;code&gt;Cedar&lt;/code&gt; stack on Heroku&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;Cedar&lt;/code&gt; stack on Heroku solves this problem by allowing you to define as many types of worker as you want using the &lt;a href=&quot;http://blog.heroku.com/archives/2011/6/20/the_new_heroku_1_process_model_procfile/&quot;&gt;Procfile&lt;/a&gt; which is new to &lt;code&gt;Cedar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add this to your &lt;code&gt;Procfile&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;sy&quot;&gt;worker:&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;QUEUE&lt;/span&gt;=* bundle exec rake resque&lt;span class=&quot;sy&quot;&gt;:work&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;sy&quot;&gt;scheduler:&lt;/span&gt; bundle exec rake resque&lt;span class=&quot;sy&quot;&gt;:scheduler&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Change your task file.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; require &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque/tasks&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt; require &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque_scheduler/tasks&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;4&lt;/span&gt; task &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque:setup&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;sy&quot;&gt;:environment&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;5&lt;/span&gt; task &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;resque:scheduler_setup&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;sy&quot;&gt;:environment&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;And run one scheduler worker.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; heroku scale scheduler=&lt;span class=&quot;i&quot;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;Deploy!&lt;/h2&gt;
&lt;p&gt;When we put this all together, we have a &lt;em&gt;scheduler worker&lt;/em&gt; monitoring our scheduled/delayed jobs, and any number of workers working our &lt;code&gt;resque&lt;/code&gt; queues. Jobs are placed in our &lt;code&gt;resque&lt;/code&gt; queues either directly by our application, or by the &lt;em&gt;scheduler&lt;/em&gt; at the scheduled time.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;a href=&quot;#fnr1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; First, James Bracy of &lt;a href=&quot;http://redistogo.com&quot;&gt;RedisToGo&lt;/a&gt; wrote a nice &lt;a href=&quot;http://blog.redistogo.com/2010/07/26/resque-with-redis-to-go/&quot;&gt;blog post&lt;/a&gt; showing how to use Resque instead of delayed_job with Heroku. And Daniel Huckstep then wrote a great &lt;a href=&quot;http://blog.darkhax.com/2010/07/30/auto-scale-your-resque-workers-on-heroku&quot;&gt;blog post&lt;/a&gt; on a nifty way to auto-scale workers on Heroku.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn2&quot;&gt;&lt;a href=&quot;#fnr2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; Almost, &lt;code&gt;resque-scheduler&lt;/code&gt; requires a dedicated worker running all the time, and that will cost some money on Heroku.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn3&quot;&gt;&lt;a href=&quot;#fnr3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; Adjust as needed if you are not using &lt;code&gt;ActiveRecord&lt;/code&gt;.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn4&quot;&gt;&lt;a href=&quot;#fnr4&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; Occasionally, you will have two workers clearing the queues simultaneously. In this case, the scaling code will not scale down because it is not safe to do so and the scale down will have to wait until the next opportunity.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Is BDD Right for a Startup?</title>
    <link rel="alternate" type="text/html" href="http://blog.leshill.org/blog/2011/02/20/is-bdd-right-for-a-startup.html" />
    
    <id>tag:blog.leshill.org,2011-02-20:1298209946</id>
    
    <published>2011-02-20T05:52:26-08:00</published>
    <updated>2011-02-20T05:52:26-08:00</updated>
    <content type="html">&lt;p&gt;There is a thread over on &lt;a href=&quot;http://news.ycombinator.com/item?id=2240595&quot;&gt;Hacker News&lt;/a&gt; about this, and there is a question on &lt;a href=&quot;http://qr.ae/AeVm&quot;&gt;Quora&lt;/a&gt; about it as well.&lt;/p&gt;
&lt;p&gt;TL;DR : Team knows TDD/BDD? Use it!&lt;/p&gt;
&lt;p&gt;To me the answer is absolutely yes, with an important qualification. The&lt;br /&gt;
developers must be experienced with TDD/BDD. When the team is experienced with&lt;br /&gt;
TDD/BDD and knows the tools, idioms, anti-patterns, and effective&lt;br /&gt;
workflows it delivers better, higher quality, and more desirable results&lt;br /&gt;
faster.&lt;/p&gt;
&lt;p&gt;When the team does not know how to go about TDD/BDD effectively, their lack of&lt;br /&gt;
skill in driving features through testing will slow them down and will not&lt;br /&gt;
yield better results&lt;sup class=&quot;footnote&quot; id=&quot;fnr1&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; &amp;#8212; this is not unexpected. It takes practice and&lt;br /&gt;
discipline to build testing skills.&lt;/p&gt;
&lt;p&gt;If you are at a startup, writing some code and asking the question &amp;#8220;Do we&lt;br /&gt;
TDD/BDD?&amp;#8221; &amp;#8212; it seems to me that you have already crossed the Rubicon and are&lt;br /&gt;
not going to be able to TDD/BDD effectively. The time to make that choice is&lt;br /&gt;
when you are assembling your team.&lt;/p&gt;
&lt;p&gt;Founding your startup now? TDD/BDD experience should be one of the criteria you&lt;br /&gt;
look for in your development team.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;a href=&quot;#fnr1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; In my experience, the efforts of someone new to TDD/BDD are usually&lt;br /&gt;
ineffective at delivering clean and valuable code.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Heroku Environment Variables</title>
    <link rel="alternate" type="text/html" href="http://blog.leshill.org/blog/2010/11/02/heroku-environment-variables.html" />
    
    <id>tag:blog.leshill.org,2010-11-01:1288670966</id>
    
    <published>2010-11-01T21:09:26-07:00</published>
    <updated>2010-11-01T21:09:26-07:00</updated>
    <content type="html">&lt;h1&gt;Also Known As: Config Vars&lt;/h1&gt;
&lt;p&gt;Deploying an app to &lt;a href=&quot;http://heroku.com&quot;&gt;Heroku&lt;/a&gt; is awesome. Really. If you have not yet done so, it is worth spending the few minutes to setup a simple Rails app and deploy to Heroku.&lt;/p&gt;
&lt;p&gt;Awesome! Unless you have a lot of local configuration (perhaps your app talks to many external systems and has lots of settings). Then it becomes a bit less awesome, but we can fix that!&lt;/p&gt;
&lt;p&gt;Heroku handles local configuration with something Heroku calls &lt;em&gt;config variables&lt;/em&gt;. They are effectively environment variables, but I will follow Heroku&amp;#8217;s lead and call them &lt;em&gt;config variables&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Local configurations before Heroku&lt;/h2&gt;
&lt;p&gt;Before &lt;a href=&quot;http://heroku.com&quot;&gt;Heroku&lt;/a&gt;, the issue of how to keep local configurations, like database settings (including passwords) and API tokens, was resolved by having a file that was not checked into source control, but that was avaiable in all environments.&lt;/p&gt;
&lt;p&gt;An example we are all familiar with is Capistrano. One (or more) YAML (usually) files are setup locally on each host: your local development box, the staging server, the production server.  On the deployment hosts (i.e. staging, production) these files are located in the Capistrano shared directory and symlinked during the deploy so that the application can read them to load any configurations.&lt;/p&gt;
&lt;h2&gt;Local configurations with Heroku&lt;/h2&gt;
&lt;p&gt;Heroku applications cannot use local storage in the same way. There is no directory available to store your applications configuration files locally; and you do not want them in source control&lt;sup class=&quot;footnote&quot; id=&quot;fnr1&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Heroku instead provides each application with user defined config variables that are available in the your application&amp;#8217;s &lt;code&gt;ENV&lt;/code&gt; hash. If, for example, you are configuring &lt;code&gt;omniauth&lt;/code&gt; with Twitter support, you might have this code in &lt;strong&gt;config/initializers/omniauth.rb&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;Rails&lt;/span&gt;.application.config.middleware.use &lt;span class=&quot;co&quot;&gt;OmniAuth&lt;/span&gt;::&lt;span class=&quot;co&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt;   provider &lt;span class=&quot;sy&quot;&gt;:twitter&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;TWITTER_KEY&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class=&quot;co&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;TWITTER_SECRET&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Your app will read the configuration from the &lt;code&gt;ENV&lt;/code&gt; hash. You use the &lt;code&gt;heroku&lt;/code&gt; command to set the config variables:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;heroku config:add TWITTER_KEY=key TWITTER_SECRET=secret --app myapp&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This quickly becomes painful if you have to do this many times on many Heroku applications. After googling around for a bit, I found one article by &lt;a href=&quot;http://tammersaleh.com/posts/managing-heroku-environment-variables-for-local-development&quot;&gt;Tammer Saleh&lt;/a&gt; that provided a bit of inspiration.&lt;/p&gt;
&lt;h1&gt;Managing Heroku config variables using a local YAML file&lt;/h1&gt;
&lt;p&gt;We can make things better by using a local file on your development machine to manage all the settings in one place.&lt;/p&gt;
&lt;p&gt;Lets save our configuration to &lt;code&gt;config/heroku.yml&lt;/code&gt; which looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apps:
  staging: myapp-staging
  production: myapp
development: &amp;amp;defaults
  admins: 'joe sue'
  domain_url: http://localhost:3000
  twitter_key: key
  twitter_secret: secret
test:
  &amp;lt;&amp;lt;: *defaults
staging:
  bundle_without: development:test
  admins: 'joe sue'
  domain_url: http://myapp-staging.heroku.com
  twitter_key: key
  twitter_secret: secret
production:
  bundle_without: development:test
  admins: 'joe sue'
  domain_url: http://myapp.heroku.com
  twitter_key: key
  twitter_secret: secret&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The file should seem familiar; it is organized very much like the Rails &lt;code&gt;database.yml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;apps&lt;/code&gt; key defines a mapping from an environment name like &lt;code&gt;staging&lt;/code&gt; to a Heroku application like &lt;code&gt;myapp-staging&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Each environment key has its own settings. Note that &lt;code&gt;development&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; are not named under the &lt;code&gt;apps&lt;/code&gt; key as they local and are not deployed to Heroku.&lt;/p&gt;
&lt;p&gt;This file &lt;strong&gt;is not checked in&lt;/strong&gt; and should be added to your &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To load our YAML settings file at runtime, we have to modify &lt;code&gt;config/application.rb&lt;/code&gt; and add a new file: &lt;code&gt;config/heroku_env.rb&lt;/code&gt; (all files are on &lt;a href=&quot;http://github.com/leshill/heroku-thor&quot;&gt;github&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We make the following modification to the top of  &lt;code&gt;config/application.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; require &lt;span class=&quot;co&quot;&gt;File&lt;/span&gt;.expand_path(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;../boot&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pc&quot;&gt;__FILE__&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt; require &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;rails&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;4&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;5&lt;/span&gt; load(&lt;span class=&quot;co&quot;&gt;File&lt;/span&gt;.expand_path(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;../heroku_env.rb&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pc&quot;&gt;__FILE__&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Our app is now reading our YAML file and populating the application&amp;#8217;s &lt;code&gt;ENV&lt;/code&gt; hash based our settings file when we run locally.&lt;/p&gt;
&lt;p&gt;To set the config variables on Heroku, we copy &lt;code&gt;heroku.thor&lt;/code&gt; (yes, &lt;a href=&quot;http://github.com/leshill/heroku-thor&quot;&gt;github&lt;/a&gt;) to our &lt;code&gt;lib/tasks&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;It defines two tasks for each of your Heroku apps: &lt;code&gt;config&lt;/code&gt; to set the config variables from the settings files, and &lt;code&gt;rack_env&lt;/code&gt; to set the &lt;code&gt;RACK_ENV&lt;/code&gt; config variable.&lt;/p&gt;
&lt;p&gt;We use &lt;code&gt;thor deploy:staging:config&lt;/code&gt; to setup our config variables on our Heroku staging application.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% thor deploy:staging:config
heroku config:add ADMINS='joe sue' DOMAIN_URL='http://myappp-staging.heroku.com' TWITTER_KEY='key' TWITTER_SECRET='secret' --app myapp-staging
Adding config vars:
  ADMINS         =&amp;gt; joe sue
  DOMAIN_URL     =&amp;gt; http://myapp-staging.heroku.com
  TWITTER_KEY    =&amp;gt; key
  TWITTER_SECRET =&amp;gt; secret
Restarting app...done.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And your app is now configured.&lt;/p&gt;
&lt;h2&gt;Better?&lt;/h2&gt;
&lt;p&gt;I have found this approach to managing my Heroku apps useful. One way it can be improved is by extending the &lt;code&gt;thor&lt;/code&gt; file to include common Heroku commands such as deploys (and you could use &lt;code&gt;invoke&lt;/code&gt; to chain together the deploy and configuration settings).&lt;/p&gt;
&lt;p&gt;Still, I am not pleased. Mostly this is because I have not packaged this up nicely. The need for locally modified files makes this a candidate for a Rails generator, something I may do if I get the time.&lt;/p&gt;
&lt;p&gt;For now the raw source is up on &lt;a href=&quot;http://github.com/leshill/heroku-thor&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;a href=&quot;#fnr1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; Really.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Everyone's first Rails app</title>
    <link rel="alternate" type="text/html" href="http://blog.leshill.org/blog/2010/09/23/diaspora.html" />
    
    <id>tag:blog.leshill.org,2010-09-23:1285253154</id>
    
    <published>2010-09-23T07:45:54-07:00</published>
    <updated>2010-09-23T07:45:54-07:00</updated>
    <content type="html">&lt;p&gt;There are some rumblings in the Ruby community now about the recently released &lt;a href=&quot;http://www.joindiaspora.com/&quot;&gt;Diaspora&lt;/a&gt; and the quality of its codebase.&lt;/p&gt;
&lt;p&gt;I took a look at it on the day it was released. What I saw was everyone&amp;#8217;s first Rails app. The code looked like it had been written directly after reading a tutorial or a book.&lt;/p&gt;
&lt;p&gt;This is not a bad thing. We all started with Rails and wrote an app like that.  It is the first step on the journey to mastery.&lt;/p&gt;
&lt;p&gt;Unfortunately for the Diaspora team, they have done this in public and with a great expectations and corresponding hype (Diaspora has been called a &lt;em&gt;Facebook Killer&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Fortunately for the Diaspora team, they have done this in public with a &lt;a href=&quot;http://github.com/diaspora/diaspora&quot;&gt;github repository&lt;/a&gt; that others can contribute to&lt;sup class=&quot;footnote&quot; id=&quot;fnr1&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; and make better.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;a href=&quot;#fnr1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; Sort of. I, and others, would have preferred an MIT license.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Cucumber Tips</title>
    <link rel="alternate" type="text/html" href="http://blog.leshill.org/blog/2010/09/19/cucumber-tips.html" />
    
    <id>tag:blog.leshill.org,2010-09-19:1284953752</id>
    
    <published>2010-09-19T20:35:52-07:00</published>
    <updated>2010-09-19T20:35:52-07:00</updated>
    <content type="html">&lt;p&gt;As a happy &lt;a href=&quot;http://cukes.info&quot;&gt;Cucumber&lt;/a&gt; user, I am really glad to see that a few of my favorite Rubyists have recently blogged some tips for using &lt;strong&gt;Cucumber&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Jonas Nicklas &lt;a href=&quot;http://elabs.se/blog/15-you-re-cuking-it-wrong&quot;&gt;You&amp;#8217;re Cuking It Wrong&lt;/a&gt;&lt;br /&gt;
Mislav MarohniÄ‡ &lt;a href=&quot;http://mislav.uniqpath.com/2010/09/cuking-it-right/&quot;&gt;You&amp;#8217;re cuking it right&lt;/a&gt;&lt;br /&gt;
Bodaniel Jeanes &lt;a href=&quot;http://bjeanes.com/2010/09/19/selector-free-cucumber-scenarios&quot;&gt;Selector-Free Cucumber Scenarios&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks guys!&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Releasing A Gem? Read This Post!</title>
    <link rel="alternate" type="text/html" href="http://blog.leshill.org/blog/2010/07/19/releasing-a-gem-read-this-post.html" />
    
    <id>tag:blog.leshill.org,2010-07-18:1279512275</id>
    
    <published>2010-07-18T21:04:35-07:00</published>
    <updated>2010-07-18T21:04:35-07:00</updated>
    <content type="html">&lt;p&gt;One of the great things about the Ruby community is that we are very happy to release our code; to contribute back to the community. &lt;a href=&quot;http://rubygems.org&quot;&gt;RubyGems&lt;/a&gt; and &lt;a href=&quot;http://github.com&quot;&gt;github&lt;/a&gt; make it ridiculously easy.&lt;/p&gt;
&lt;p&gt;Another great thing about the Ruby community is that we also like to help out. Maybe, someone wants to fix a bug, or perhaps sees an opportunity for a new feature, or just wants to help make the code better.&lt;/p&gt;
&lt;p&gt;Lately, for whatever reason&lt;sup class=&quot;footnote&quot; id=&quot;fnr1&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, I have been running across well-used gems that passively discourage contributions because their development environment setup is disastrous&lt;sup class=&quot;footnote&quot; id=&quot;fnr2&quot;&gt;&lt;a href=&quot;#fn2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Anyone should be able to contribute to your gem after doing this&lt;sup class=&quot;footnote&quot; id=&quot;fnr3&quot;&gt;&lt;a href=&quot;#fn3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% git clone http://github.com/leshill/makes_coffee.git
% cd makes_coffee
% cat &amp;gt; .rvmrc
rvm_gemset_create_on_use_flag=1
rvm gemset use makes_coffee
^D
% cd .
% gem install bundler
% bundle install
% rake
...All specs pass...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is all&lt;sup class=&quot;footnote&quot; id=&quot;fnr4&quot;&gt;&lt;a href=&quot;#fn4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; it should take to get a development environment up and running for your gem.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;a href=&quot;#fnr1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; We are using &lt;em&gt;Rails 3&lt;/em&gt;.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn2&quot;&gt;&lt;a href=&quot;#fnr2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; It is disastrous if I have to repeatedly run &lt;code&gt;rake&lt;/code&gt; and look at stack traces for me to discern exactly what needs to be done to get a working development environment.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn3&quot;&gt;&lt;a href=&quot;#fnr3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; Yea, I am using &lt;code&gt;bundler&lt;/code&gt; and &lt;code&gt;rvm&lt;/code&gt;. You should be too.&lt;sup class=&quot;footnote&quot; id=&quot;fnr5&quot;&gt;&lt;a href=&quot;#fn5&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn4&quot;&gt;&lt;a href=&quot;#fnr4&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; Yea, the &lt;code&gt;rvmrc&lt;/code&gt; step should not need to be there :) Oh and there may need to be more done, like setting up a database. Put it in the &lt;code&gt;README&lt;/code&gt;.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn5&quot;&gt;&lt;a href=&quot;#fnr5&quot;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt; Or your gem has a development setup in the &lt;code&gt;README&lt;/code&gt; or wiki, like &lt;a href=&quot;http://github.com/rspec/rspec-dev&quot;&gt;RSpec&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>resque_spec for RSpec and Cucumber</title>
    <link rel="alternate" type="text/html" href="http://blog.leshill.org/blog/2010/06/13/resque-spec-for-rspec-and-cucumber.html" />
    
    <id>tag:blog.leshill.org,2010-06-13:1276467017</id>
    
    <published>2010-06-13T15:10:17-07:00</published>
    <updated>2010-06-13T15:10:17-07:00</updated>
    <content type="html">&lt;p&gt;&lt;code&gt;resque_spec&lt;/code&gt; is a simple RSpec and Cucumber matcher for &lt;a href=&quot;http://github.com/defunkt/resque&quot;&gt;Resque&lt;/a&gt; , loosely based on &lt;a href=&quot;http://github.com/justinweiss/resque_unit&quot;&gt;resque_unit&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Install it as a gem:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% gem install resque_spec&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Given this scenario&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; Given a person
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt; When I recalculate
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt; Then the person has calculate queued&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;And I write this spec using the &lt;code&gt;resque_spec&lt;/code&gt; matcher&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; describe &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;#recalculate&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt;   before &lt;span class=&quot;r&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt;     &lt;span class=&quot;co&quot;&gt;ResqueSpec&lt;/span&gt;.reset!
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt;   it &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;adds person.calculate to the Person queue&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt;     person.recalculate
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;co&quot;&gt;Person&lt;/span&gt;.should have_queued(person.id, &lt;span class=&quot;sy&quot;&gt;:calculate&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;(And I take note of the &lt;code&gt;before&lt;/code&gt; block that is calling &lt;code&gt;reset!&lt;/code&gt; for every spec)&lt;/p&gt;
&lt;p&gt;And I might write this as a Cucumber step&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;rx&quot;&gt;&lt;span class=&quot;dl&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;the (&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\w&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;?) has (&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\w&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;?) queued&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;/&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;do&lt;/span&gt; |thing, method|
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt;   thing_obj = instance_variable_get(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;#{&lt;/span&gt;thing&lt;span class=&quot;idl&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt;   thing_obj.class.should have_queued(thing_obj.id, method.to_sym)
&lt;span class=&quot;no&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Then I write some code to make it pass:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;cl&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;iv&quot;&gt;@queue&lt;/span&gt; = &lt;span class=&quot;sy&quot;&gt;:people&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;recalculate&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;5&lt;/span&gt;     &lt;span class=&quot;co&quot;&gt;Resque&lt;/span&gt;.enqueue(&lt;span class=&quot;co&quot;&gt;Person&lt;/span&gt;, id, &lt;span class=&quot;sy&quot;&gt;:calculate&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The source is up on &lt;a href=&quot;http://github.com/leshill/resque_spec&quot;&gt;github&lt;/a&gt; .&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Rails 3, RSpec, Factory Girl, Haml, and jQuery</title>
    <link rel="alternate" type="text/html" href="http://blog.leshill.org/blog/2010/05/08/rails-3-rspec-factory-girl-haml-and-jquery.html" />
    
    <id>tag:blog.leshill.org,2010-05-08:1273377370</id>
    
    <published>2010-05-08T20:56:10-07:00</published>
    <updated>2010-05-08T20:56:10-07:00</updated>
    <content type="html">&lt;p&gt;Easily generate a Rails 3 application with RSpec, Factory Girl, Haml, and jQuery in one line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% rails new my_app -J -T -m \
    http://github.com/leshill/rails3-app/raw/master/app.rb&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;rvm&lt;/h2&gt;
&lt;p&gt;We love &lt;code&gt;rvm&lt;/code&gt;, so the application has an &lt;code&gt;.rvmrc&lt;/code&gt; generated to specify a gemset.&lt;/p&gt;
&lt;h2&gt;Generators&lt;/h2&gt;
&lt;p&gt;This also gives you the Factory Girl and Haml Rails 3 generators &amp;mdash; the generators for RSpec are in the RSpec gem &amp;mdash; so that your factories and views are generated using Factory Girl and Haml, and that all your generated tests are specs. These generators are from the &lt;strong&gt;rails3_generators&lt;/strong&gt; gem, we pulled them out to avoid all the other dependencies included in that gem.&lt;/p&gt;
&lt;h2&gt;JavaScript Includes&lt;/h2&gt;
&lt;p&gt;Since the Rails helper &lt;code&gt;javascript_include_tag :defaults&lt;/code&gt; is looking for Prototype, we used &lt;a href=&quot;http://flow.handle.it/past/2010/2/9/jquery_in_rails&quot;&gt;this&lt;/a&gt; to add a new JavaScript expansion to pull in the jQuery libraries. Use it like so:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; = javascript_include_tag &lt;span class=&quot;sy&quot;&gt;:jquery&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;git&lt;/h2&gt;
&lt;p&gt;We love &lt;code&gt;git&lt;/code&gt;, so the application has a git repo initialized with all the initial changes staged.&lt;/p&gt;
&lt;h2&gt;Wrap Up&lt;/h2&gt;
&lt;p&gt;After the application has been generated, there are a few clean up commands to run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  % cd my_app
  % gem install bundler
  % bundle install
  % bundle lock
  % script/rails generate rspec:install&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  
  <entry>
    <title>Binary Search, TDD, and You</title>
    <link rel="alternate" type="text/html" href="http://blog.leshill.org/blog/2010/04/26/binary-search-tdd-and-you.html" />
    
    <id>tag:blog.leshill.org,2010-04-26:1272337358</id>
    
    <published>2010-04-26T20:02:38-07:00</published>
    <updated>2010-04-26T20:02:38-07:00</updated>
    <content type="html">&lt;p&gt;A bit late to the party, I took a programming challenge from &lt;a href=&quot;http://reprog.wordpress.com/2010/04/19/are-you-one-of-the-10-percent/&quot;&gt;Mike Taylor&lt;/a&gt; :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Are you one of the 10% of programmers who can write a binary search?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;strong&gt;10%&lt;/strong&gt; is a reference to an essay by Jon Bentley, who found that only&lt;br /&gt;
&lt;strong&gt;10%&lt;/strong&gt; of the programmers asked could write a binary search correctly given a&lt;br /&gt;
description of the algorithm. The challenge from Mike was to write it without&lt;br /&gt;
any &lt;strong&gt;TESTING&lt;/strong&gt; whatsoever.&lt;/p&gt;
&lt;p&gt;Here is my answer in Ruby:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;binary_search&lt;/span&gt;(value, array, start, finish = array.length - &lt;span class=&quot;i&quot;&gt;1&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;i&quot;&gt;-1&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; finish &amp;lt; start
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt;   mid = (start + finish)/&lt;span class=&quot;i&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;if&lt;/span&gt; array[mid] == value
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt;     mid
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;elsif&lt;/span&gt; array[mid] &amp;lt; value
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt;     binary_search(value, array, mid + &lt;span class=&quot;i&quot;&gt;1&lt;/span&gt;, finish)
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt;     binary_search(value, array, start, mid - &lt;span class=&quot;i&quot;&gt;1&lt;/span&gt;)
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Pretty standard. This was about 1/2 an hour from start to finish; mostly due to&lt;br /&gt;
not being able to run the code&lt;sup class=&quot;footnote&quot; id=&quot;fnr1&quot;&gt;&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; and obsessing over whether I had handled all&lt;br /&gt;
the edge cases, which is related to my motivation for taking the challenge.&lt;/p&gt;
&lt;p&gt;Aside from being a fun exercise, the comments Mike received led him to write&lt;br /&gt;
two more blog posts!&lt;/p&gt;
&lt;p&gt;The third in the series, &lt;a href=&quot;http://reprog.wordpress.com/2010/04/23/testing-is-not-a-substitute-for-thinking-binary-search-part-3/&quot; title=&quot;binary&lt;br /&gt;
search part&lt;br /&gt;
3&quot;&gt;Testing is not a substitute for thinking&lt;/a&gt;&lt;br /&gt;
has some interesting and keen observations. I agree with most of them.&lt;/p&gt;
&lt;p&gt;However, the conclusion is absolutely, categorically wrong.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bearing in mind that binary search is in fact a pretty&lt;br /&gt;
simple algorithm, itâ€™s likely true that you could have&lt;br /&gt;
bashed your way through to a working implementation after&lt;br /&gt;
a few iterations of coding and testing.  But â€“&lt;/p&gt;
&lt;p&gt;Your code would be less clear&lt;/p&gt;
&lt;p&gt;You wouldnâ€™t understand clearly why it works&lt;/p&gt;
&lt;p&gt;You would find it harder to extend or modify in future&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Inflammatory stuff. And totally &lt;strong&gt;wrong&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A few paragraphs earlier, Mike lays out why he thinks this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By using skills that are not often thought about&lt;br /&gt;
in these days of test-driven kool-ade, reflexive&lt;br /&gt;
application of design patterns and automatic refactoring&lt;br /&gt;
tools.  Once more, let me be clear that all these things&lt;br /&gt;
are good so far as they go â€” really, I agree with you,&lt;br /&gt;
they are! â€” but they are no substitute for actually&lt;br /&gt;
thinking, and thinking is whatâ€™s needed for hard problems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Indeed thinking is what is needed for hard problems. What Mike has failed to&lt;br /&gt;
acknowledge is that TDD is not a tool for writing code, TDD is a tool for&lt;br /&gt;
thinking clearly.&lt;/p&gt;
&lt;p&gt;As an example of this, in the spirit of Mike&amp;#8217;s challenge, I expressly wrote the&lt;br /&gt;
binary search code without test-driving it. However, instead of writing the&lt;br /&gt;
code directly from the description, I turned the description into a set of&lt;br /&gt;
constraints. As each of those constraints became clear, I wrote code. And in&lt;br /&gt;
the end I had a working binary search&lt;sup class=&quot;footnote&quot; id=&quot;fnr2&quot;&gt;&lt;a href=&quot;#fn2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;So, am I saying Mike is an idiot? Absolutely not! After hearing more and more&lt;br /&gt;
critiques (both thoughtful and thoughtless) of TDD, I am coming around to the&lt;br /&gt;
conclusion that there is a problem. The problem is most people learn TDD&lt;br /&gt;
from a book or a blog or even from a vague description and some positive can-do&lt;br /&gt;
attitude (Commendable!  Really!)&lt;/p&gt;
&lt;p&gt;What has become apparent is that this will not work for most developers. What&lt;br /&gt;
does work is deliberate study and mentoring, ideally by pairing.  A mentor who&lt;br /&gt;
is showing you more than just the syntactic mechanics of writing test code and&lt;br /&gt;
having it invoke the code under test. Someone who is explaining how tests are a&lt;br /&gt;
tool for understanding and solving the problem.&lt;/p&gt;
&lt;p&gt;Folks interested in Software Craftsmanship have realized this truth about all&lt;br /&gt;
aspects of software development: you learn better from a mentor and from&lt;br /&gt;
deliberate practice.&lt;/p&gt;
&lt;p&gt;TDD is no exception.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn1&quot;&gt;&lt;a href=&quot;#fnr1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; Sort-of, according to Mike&amp;#8217;s rules I could have shaken out syntax errors&lt;br /&gt;
by running the code; in the case of Ruby, that felt like cheating, so I just&lt;br /&gt;
stared at it.&lt;/p&gt;
&lt;p class=&quot;footnote&quot; id=&quot;fn2&quot;&gt;&lt;a href=&quot;#fnr2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; After the fact, I threw in a test scaffold to verify that it does work,&lt;br /&gt;
and that it is log(2)N.&lt;/p&gt;</content>
  </entry>
  
</feed>
